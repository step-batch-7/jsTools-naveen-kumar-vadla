Features:
[01] node ./sort.js -k 2 fileName 
[02] cat fileName | node ./sort.js -k 2 fileName 
[03] node ./sort.js -t ',' -k 2 fileName
[04] cat fileName | node ./sort.js -t ',' -k 2 fileName
[05] node ./sort.js -r fileName
[06] cat fileName | node ./sort.js -r
[07] node ./sort.js fileName
[08] cat fileName | node ./sort.js 
[09] node ./sort.js -n fileName
[10] cat fileName | node ./sort.js -n
[11] node ./sort.js -n -r fileName
[12] cat fileName | node ./sort.js -n -r

-----------------------
v0.1
  node ./sort.js -k 2 fileName 
--done--    -->Create Files and directories :
                directories: src , test , appTests
                files : sort.js , src/sortLib.js , test/testSortLib.js
--done--    -->npm init
--done--    -->Check Connections : mocha , nyc 
--done--    -->Modules : chai

Tasks : 
--done--    -->sort Content based by given field (sortRows)
                --format file content (formatLines)
--done--    -->get The content of fileName
--done--    -->parse user options (parseUserArgs)


-----------------------
v0.2
  cat fileName | node ./sort.js -k 2 fileName 
  
Tasks:
--done--    -->Extract parseUserArgs and isValidField functions to outside the class
--done--    -->Modify test cases for parseUserArgs and isValidField
--done--    -->extract file reading and sorting to separate Functions
--done--    -->Have a common sortLines for both stdin and fileContent
--done--    -->Pass a logger function from main to log the result 
--done--    -->Introduce sinon in test cases
--done--    -->Testing of logger function
--done--    -->Pass a readStream from main 
--done--    -->Use readStream for reading both stdin and fileContent
--done--    -->Add tests for stdin
--done--    -->Passing createStdinStream function from main
--done--    -->Introduce beforeEach in tests
--done--    -->Remove EventEmitters in tests
--pending-- -->Found a bug has to fix